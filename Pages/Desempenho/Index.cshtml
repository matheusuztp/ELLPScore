@page
@model Desempenho.IndexModel
@{
    ViewData["Title"] = "Verificar Desempenho";
    Layout = "~/Pages/Shared/_LayoutLogado.cshtml";
}

<div class="container mt-1">
    <h2>Verificar Desempenho</h2>

    <form method="get" id="gerarRelatorio" action="@Url.Page("Index", new { handler = "DesempenhoPorAluno" })">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label>Aluno:</label>
                    <select name="AlunoID" id="alunoSelect" class="form-control">
                        @if (Model.Alunos.Count() == 0)
                        {
                            <option value="0">Não há alunos</option>
                        }

                        @foreach (var aluno in Model.Alunos)
                        {
                            <option value="@aluno.Value">@aluno.Text</option>
                        }
                    </select>
                </div>
            </div>
            <button type="submit" style="
                                        width: 5%;
                                        margin-top: 10px;
                                        height: 40px;
                                        margin-left: auto;"
                    class="btn btn-primary">
                Filtrar
            </button>
        </div>
    </form>

    <div id="desempenhoContainer">
        <div class="row">
            <div class="col-md-6">
                <div id="graficoDesempenhoMateria" style="height: 300px; width: 100%;"></div>
            </div>
            <div class="col-md-6">
                <div id="graficoAlunosNotas" style="height: 300px; width: 100%;"></div>
            </div>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-8">
                <div id="graficoAprovacoes" style="height: 275px; width: 100%;"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.canvasjs.com/canvasjs.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        $(document).ready(function () {
            $('#gerarRelatorio').on('submit', function (event) {
                event.preventDefault();
                var alunoId = $('#alunoSelect').val();
                $.ajax({
                    url: '@Url.Page("Index", new { handler = "DesempenhoPorAluno" })',
                    type: 'GET',
                    data: { alunoId: alunoId },
                    success: function (response) {
                        renderCharts(response);
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Erro',
                            text: 'Erro ao atualizar o desempenho.'
                        });
                    }
                });
            });
        });

        function renderCharts(data) {
            if (document.getElementById('graficoDesempenhoMateria')) {
                var chartMateria = new CanvasJS.Chart("graficoDesempenhoMateria", {
                    theme: "light2",
                    title: {
                        text: "Desempenho por Matéria"
                    },
                    data: [{
                        type: "column",
                        dataPoints: data.desempenhoPorDisciplina.map(d => ({ label: d.disciplina, y: d.nota }))
                    }]
                });
                chartMateria.render();
            }

            if (document.getElementById('graficoAlunosNotas')) {
                var chartAlunosNotas = new CanvasJS.Chart("graficoAlunosNotas", {
                    theme: "light2",
                    title: {
                        text: "Alunos x Período"
                    },
                    data: [{
                        type: "bar",
                        dataPoints: data.alunosVsPeriodo.map(d => ({ label: d.periodo, y: d.nota }))
                    }]
                });
                chartAlunosNotas.render();
            }

            if (document.getElementById('graficoAprovacoes')) {
                var chartAprovacoes = new CanvasJS.Chart("graficoAprovacoes", {
                    theme: "light2",
                    title: {
                        text: "Aprovações por Período"
                    },
                    data: [{
                        type: "line",
                        dataPoints: data.aprovacoes.map(d => ({ label: d.periodo, y: d.aprovado }))
                    }]
                });
                chartAprovacoes.render();
            }
        }
    </script>
}